# For this application, W is the unit length, tau is the unit time
# and cl0 is the reference concentration. All of these quantities are set to 1.

# =================================================================================
# Set the number of dimensions (2 or 3 for a 2D or 3D calculation)
# =================================================================================
set Number of dimensions = 3

# =================================================================================
# Set the length of the domain in all three dimensions
# (Domain size Z ignored in 2D)
# =================================================================================
# Each axes spans from zero to the specified length
#set Domain size X = 204.8
set Domain size X = 819.2
#set Domain size X = 1638.4
#set Domain size Y = 204.8
set Domain size Y = 204.8
set Domain size Z = 204.8

# =================================================================================
# Set the element parameters
# =================================================================================
# The number of elements in each direction is 2^(refineFactor) * subdivisions
# Subdivisions Z ignored in 2D
# For optimal performance, use refineFactor primarily to determine the element size
set Subdivisions X = 4
set Subdivisions Y = 1
set Subdivisions Z = 1

set Refine factor = 7

# Set the polynomial degree of the element (allowed values: 1, 2, or 3)
set Element degree = 2

# =================================================================================
# Set the adaptive mesh refinement parameters
# =================================================================================
# Set the flag determining if adaptive meshing is activated
set Mesh adaptivity = true

# Set the maximum and minimum level of refinement
# When adaptive meshing is enabled, the refine factor set in the block above is
# only used to generate the first pass of the mesh as the initial conditions are
# applied. It should be set somewhere between the max and min levels below.
set Max refinement level = 7
set Min refinement level = 4

## Set the number of time steps between remeshing operations
set Steps between remeshing operations = 200

# # Set the criteria for adapting the mesh
# subsection Refinement criterion: phi
#     # Select whether the mesh is refined based on the variable value (VALUE),
#     # its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
#     set Criterion type = VALUE_AND_GRADIENT
#     # Set the lower and upper bounds for the value-based refinement window
#     set Value lower bound = -0.9999
#     set Value upper bound = 0.9999
# 
# 	 set Gradient magnitude lower bound = 1e-7
# end


# Set the criteria for adapting the mesh
subsection Refinement criterion: c
    # Select whether the mesh is refined based on the variable value (VALUE),
    # its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
    set Criterion type = GRADIENT
    # Set the lower and upper bounds for the value-based refinement window
	 set Gradient magnitude lower bound = 1e-10
#    set Value upper bound = 0.999
end

# =================================================================================
# Set the time step parameters
# =================================================================================
# The size of the time step
set Time step = 0.05

# The simulation ends when either the number of time steps is reached or the
# simulation time is reached.
set Number of time steps = 50000

# =================================================================================
# Set the boundary conditions
# =================================================================================
# Set the boundary condition for each variable, where each variable is given by
# its name, as defined in equations.h. The four boundary condition
# types are NATURAL, DIRICHLET, NON_UNIFORM_DIRICHLET and PERIODIC. If all
# of the boundaries have the same boundary condition, only one boundary condition
# type needs to be given. If multiple boundary condition types are needed, give a
# comma-separated list of the types. The order is the minimum of x, maximum of x,
# minimum of y, maximum of y, minimum of z, maximum of z (i.e left, right, bottom,
# top in 2D and left, right, bottom, top, front, back in 3D). The value of a
# Dirichlet BC is specified in the following way -- DIRCHILET: val -- where 'val' is
# the desired value. If the boundary condition is NON_UNIFORM_DIRICHLET, the
# boundary condition should be specified in the appropriate function in 'ICs_and_BCs.h'.
# Example 1: All periodic BCs for variable 'c'
# set Boundary condition for variable c = PERIODIC
# Example 2: Zero-derivative BCs on the left and right, Dirichlet BCs with value
# 1.5 on the top and bottom for variable 'n' in 2D
# set Boundary condition for variable n = NATURAL, NATURAL, DIRICHLET: 1.5, DIRICHLET: 1.5
# PERIODIC, NATURAL, PERIODIC, NATURAL
# PERIODIC, PERIODIC, NATURAL, NATURAL

# set Boundary condition for variable phi =  NATURAL
# set Boundary condition for variable c =  NATURAL
# set Boundary condition for variable xi =  NATURAL
#set Boundary condition for variable phi = PERIODIC,PERIODIC,NATURAL,NATURAL
#set Boundary condition for variable c   = PERIODIC,PERIODIC,NATURAL,NATURAL
#set Boundary condition for variable xi  = PERIODIC,PERIODIC,NATURAL,NATURAL
set Boundary condition for variable phi = NATURAL,NATURAL,PERIODIC,PERIODIC,PERIODIC,PERIODIC
set Boundary condition for variable c   = NATURAL,NATURAL,PERIODIC,PERIODIC,PERIODIC,PERIODIC
set Boundary condition for variable xi  = NATURAL,NATURAL,PERIODIC,PERIODIC,PERIODIC,PERIODIC

# =================================================================================
# Set the model constants
# =================================================================================
# Set the user-defined model constants, which must have a counter-part given in
# customPDE.h. These are most often used in the residual equations in equations.h,
# but may also be used for initial conditions and nucleation calculations. The type
# options currently are DOUBLE, INT, BOOL, TENSOR, and [symmetry] ELASTIC CONSTANTS
# where [symmetry] is ISOTROPIC, TRANSVERSE, ORTHOTROPIC, or ANISOTROPIC.

# Anisotropy strength (epsilon4)
set Model constant eps4 = 0.018, DOUBLE

# Scaled supersaturation
set Model constant Omega = 0.0, DOUBLE

# Partition coefficient
set Model constant k = 0.719, DOUBLE

# Solute diffusion coefficient in liquid [m^2/s], taken from https://doi.org/10.1016/j.jcrysgro.2019.125418
set Model constant D_liquid = 3.0e-9, DOUBLE

# Solute trapping velocity V_D_PF [m/s] (set to small value to get big effect for test)
# Trapping parameter A gets its value as Dliquid/(V_D_PF*W0)
#set Model constant V_D_PF = 0.2, DOUBLE
set Model constant V_D_PF = 1.0e6, DOUBLE

# Kinetic coefficient beta0 [s/m] 
set Model constant beta0 = 0.0, DOUBLE

# Kinetic coefficient anisotropy epsilon_k [s/m] 
set Model constant epsilon_k = 0.13, DOUBLE

# Ratio of d0 in W
set Model constant d0inW = 0.5, DOUBLE

# Capillary length d0 [m]
set Model constant d0 = 43.0e-9, DOUBLE

# Constant W (unit length)
set Model constant W = 1.0, DOUBLE

# Constant W_physical (physical interface width size, in meters)
# set Model constant W = 10e-9, DOUBLE

# Constant tau (unit time)
set Model constant tau = 1.0, DOUBLE

# Reference concentration (cl0)
set Model constant cl0 = 1.0, DOUBLE

# Small regularization value to add to the magnitude of the gradient of phi when it shows in the denominator.
set Model constant regval = 1.0e-8, DOUBLE

# Thermal gradient [K/m]
set Model constant thermal_gradient = 1e6, DOUBLE

# Pulling speed [m/s]
set Model constant pulling_speed = 0.03, DOUBLE

# Initial x coordinate of zero driving force (T = Tl), in units of W_physical
set Model constant x0 = 10.0, DOUBLE

# Alloy nominal composition [wt%]
set Model constant alloy_nominal_composition = 17.0, DOUBLE

# Liquidus slope
set Model constant m_liquidus = 3.49, DOUBLE

# Crystal frame orientation (deg)
set Model constant theta0 = 0.0, DOUBLE

# Planar initialization: sine wave amplitude and wavelength
set Model constant sine_amplitude  = 20.0, DOUBLE
set Model constant sine_wavelength = 2.0, DOUBLE

# =================================================================================
# Set the output parameters
# =================================================================================
# Type of spacing between outputs ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Output condition = EQUAL_SPACING

# Number of times the program outputs the fields (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
set Number of outputs = 100

# The number of time steps between updates being printed to the screen
set Skip print steps = 100

# =================================================================================
# Set the checkpoint/restart parameters
# =================================================================================
# Whether to start this simulation from the checkpoint of a previous simulation
set Load from a checkpoint = false

# Type of spacing between checkpoints ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Checkpoint condition = EQUAL_SPACING

# Number of times the creates checkpoints (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
set Number of checkpoints = 100
